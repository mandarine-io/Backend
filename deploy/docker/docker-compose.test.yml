version: '3.8'

networks:
  mandarine-test-net:

volumes:
  mandarine-test-postgres-data:
  mandarine-test-redis-data:
  mandarine-test-minio-data:

services:
  ################################
  ########## PostgreSQL ##########
  ################################
  postgres:
    image: postgis/postgis:17-3.4-alpine
    container_name: mandarine-test-postgres
    restart: unless-stopped
    command: -c 'max_connections=1024'
    environment:
      POSTGRES_USER: ${MANDARINE_POSTGRES__USERNAME}
      POSTGRES_PASSWORD: ${MANDARINE_POSTGRES__PASSWORD}
      POSTGRES_DB: ${MANDARINE_POSTGRES__DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - ${MANDARINE_POSTGRES__PORT}:5432
    volumes:
      - mandarine-test-postgres-data:/var/lib/postgresql/data
    networks:
      - mandarine-test-net

  ###########################
  ########## Redis ##########
  ###########################
  redis:
    image: redis:7.4.1-alpine3.20
    container_name: mandarine-test-redis
    restart: unless-stopped
    environment:
      REDIS_USER: ${MANDARINE_REDIS__USERNAME}
      REDIS_PASSWORD: ${MANDARINE_REDIS__PASSWORD}
      REDIS_ARGS: '--requirepass ${MANDARINE_REDIS__PASSWORD} --user ${MANDARINE_REDIS__USERNAME} on >${MANDARINE_REDIS__PASSWORD} ~* allcommands'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - ${MANDARINE_REDIS__PORT}:6379
      - ${MANDARINE_REDIS__UI_PORT}:8001
    volumes:
      - mandarine-test-redis-data:/data
    networks:
      - mandarine-test-net

  ###########################
  ########## Minio ##########
  ###########################
  minio:
    image: bitnami/minio:2024.8.3
    container_name: mandarine-test-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MANDARINE_MINIO__ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MANDARINE_MINIO__SECRET_KEY}
      MINIO_DEFAULT_BUCKETS: ${MANDARINE_MINIO__BUCKET_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "mc ready local" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - ${MANDARINE_MINIO__PORT}:9000
      - ${MANDARINE_MINIO__UI_PORT}:9001
    volumes:
      - mandarine-test-minio-data:/bitnami/minio/data
    networks:
      - mandarine-test-net

  ##########################
  ########## SMTP ##########
  ##########################
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mandarine-test-mailhog
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8025 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - ${MANDARINE_SMTP__PORT}:1025
    networks:
      - mandarine-test-net

  ###########################
  ######### Backend #########
  ###########################
  backend:
    build:
      context: ../../
      dockerfile: deploy/images/app.Dockerfile
    image: mandarine-io/backend:${MANDARINE_SERVER__VERSION}
    container_name: mandarine-test-backend
    restart: unless-stopped
    environment:
      MANDARINE_SERVER__VERSION: ${MANDARINE_SERVER__VERSION}
    env_file:
      - .env.test
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - 8080:8080
    networks:
      - mandarine-test-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mailhog:
        condition: service_healthy
  migrate-test-data:
    build:
      context: .
      dockerfile: ../images/psql.Dockerfile
    image: mandarine-io/psql:latest
    container_name: mandarine-test-migrate-data
    restart: no
    command: [ "sh", "-c", "export PGPASSWORD=${MANDARINE_POSTGRES__PASSWORD} && find /data -iname *.up.sql | xargs printf -- ' -f %s' | xargs -t psql -h ${MANDARINE_POSTGRES__HOST} -p ${MANDARINE_POSTGRES__PORT} -U ${MANDARINE_POSTGRES__USERNAME} -d ${MANDARINE_POSTGRES__DB_NAME} -q" ]
    volumes:
      - ../../migrations/test:/data
    networks:
      - mandarine-test-net
    depends_on:
      backend:
        condition: service_healthy