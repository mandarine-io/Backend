version: '3.8'

networks:
  mandarine-dev-net:

volumes:
  mandarine-dev-postgres-data:
  mandarine-dev-redis-data:
  mandarine-dev-minio-data:

services:
  ################################
  ########## PostgreSQL ##########
  ################################
  postgres:
    image: postgis/postgis:17-3.4-alpine
    container_name: mandarine-dev-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${MANDARINE_DATABASE_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${MANDARINE_DATABASE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MANDARINE_DATABASE_POSTGRES_DBNAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - 15432:5432
    volumes:
      - mandarine-dev-postgres-data:/var/lib/postgresql/data
    networks:
      - mandarine-dev-net

  ###########################
  ########## Redis ##########
  ###########################
  redis:
    image: redis/redis-stack:7.4.0-v0
    container_name: mandarine-dev-redis
    restart: unless-stopped
    environment:
      REDIS_USER: ${MANDARINE_CACHE_REDIS_USERNAME}
      REDIS_PASSWORD: ${MANDARINE_CACHE_REDIS_PASSWORD}
      REDIS_ARGS: '--requirepass ${MANDARINE_CACHE_REDIS_PASSWORD} --user ${MANDARINE_CACHE_REDIS_USERNAME} on >${MANDARINE_CACHE_REDIS_PASSWORD} ~* allcommands'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - 16379:6379
      - 18001:8001
    volumes:
      - mandarine-dev-redis-data:/data
    networks:
      - mandarine-dev-net

  ###########################
  ########## Minio ##########
  ###########################
  minio:
    image: bitnami/minio:2024.8.3
    container_name: mandarine-dev-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MANDARINE_S3_MINIO_ACCESSKEY}
      MINIO_ROOT_PASSWORD: ${MANDARINE_S3_MINIO_SECRETKEY}
      MINIO_DEFAULT_BUCKETS: ${MANDARINE_S3_MINIO_BUCKET}
    healthcheck:
      test: [ "CMD-SHELL", "mc ready local" ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - 19000:9000
      - 19001:9001
    volumes:
      - mandarine-dev-minio-data:/bitnami/minio/data
    networks:
      - mandarine-dev-net

  ###########################
  ######### Backend #########
  ###########################
  backend:
    build:
      context: ../../
      dockerfile: deploy/images/app.Dockerfile
#    image: ghcr.io/mandarine-io/backend:${MANDARINE_SERVER_VERSION}
    container_name: mandarine-dev-backend
    restart: unless-stopped
    environment:
      MANDARINE_SERVER_VERSION: ${MANDARINE_SERVER_VERSION}
    env_file:
      - .env.dev
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 50
    networks:
      - mandarine-dev-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  #################################
  ######### Reverse Proxy #########
  #################################
  reverse-proxy:
    image: nginx:1.27.2-alpine3.20-slim
    container_name: mandarine-dev-reverse-proxy
    restart: unless-stopped
    volumes:
      - ../config/nginx/nginx.conf:/etc/nginx/nginx.conf
    healthcheck:
      test: [ 'CMD-SHELL', 'nc -z localhost 80 || exit 1' ]
      interval: 5s
      timeout: 5s
      retries: 50
    ports:
      - 1080:80
    networks:
      - mandarine-dev-net
    depends_on:
      backend:
        condition: service_started